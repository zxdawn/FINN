
----------------------------------------------------------------------------------------------
        If you require assistance with compiler and/or netcdf issues please use the
        discussion forum at:

        https://www2.acom.ucar.edu/wrf-chem/discussion-forum

        to post messages. You will will need to register before you use a specific forum.
----------------------------------------------------------------------------------------------

	********************************* WARNING ************************************
	WRF fire emissions datasets are created in a format for input into WRF-Chem
        simulations employing the plume rise option. When using the provided "base"
        fire emissions the created wrffirechemi_d<nn>_<date>_<time> files will include
        BOTH smoldering and flaming emissions.
	******************************************************************************

        The FINN fire_emis utility creates WRF gridded fire emissions files
        from the original FINN files of emissions for individual fires.  The 
        resulting files are named wrffirechemi_d<nn>_<date>_<time>.  The WRF
        fire emissions datasets contain species fire emissions and related fire
        size and vegetation cover type variables.  The species emissions
        are denoted as ebu_in_<species_name> where <species_name> is a valid
	WRF species name such as co.  The species emissions have units of
	moles/km^2/hr or ug/m^2/s for gas phase or aerosol species respectively.
	The fire size and vegetation cover type variables are denoted as
	MEAN_FCT_<type> and FIRESIZE_<type> where <type> is :
	
	AGTF  = "tropical forest"
	AGEF  = "extra tropical forest"
	AGSV  = "savanna"
	AGGR  = "grassland"

	The MEAN_FCT_<type> variable represents the mean area fraction for
	each of the four vegetation cover types per WRF horizontal grid cell.
	The FIRESIZE_<type> variable represents the fire size in km^2 for
	each of the four vegetation cover types per WRF horizontal grid cell.
        Presently the FIRESIZE_<type> variables are limited to 2 km^2.

	The fire_emis utility allows for a versatile mapping from each WRF
        species to species in the "base" fire emission files including multiple
        "base" fire emission species per single WRF species with an individual 
        weight factor per "base" fire emission species

	fire_emis reads a namelist input file that specifies all aspects
	of the mapping from the "base" fire emission file to a WRF simulation
        and checks key namelist control variables for validity.  Below is
        a complete listing of all namelist control variables.

	Before invoking fire_emis you must have a WRF initial condition file
	per WRF domain.  Standard WRF initial condition files are denoted :

	wrfinput_d<nn>

	where <nn> represents the domain number in two digit,integer format

	Thus the standard initial condition file for WRF domain number
	1 is :

	wrfinput_d01

	Building fire_emis
        ======== =========

	In the fire_emis source code directory issue the command :

	make_fire_emis

	That's it.  The make_fire_emis script is presently setup to compile
	on either Linux or AIX systems using the Portland Group Fortan90
	compile, pgf90, on Linux system or the xlf90 compiler on IBM
	AIX systems.  If you need to use another compiler such as the Intel
	Fortran90 compiler, ifort, you can set the environment variable

	FC

	before invoking make_fire_emis.  As an example you would issue
	the command :

	export FC=ifort 

	in the sh, bash, or ksh Linux shells or

	setenv FC ifort

	in the csh or tcsh shells.  Presently the make_fire_emis utility recognizes
        the following FC settings :

        pgf90                 (PGI)
        gfortran              (GNU)
        ifort                 (Intel)
        lf95                  (Lahey)
        xlf90                 (IBM)

	The fire_emis utility requires the netcdf library and make_fire_emis
	will attempt to locate the libnetcdf.a library.  However, this is
	not a foolproof process and thus you may need to set the environment variable
	
	NETCDF_DIR

	to the directory containing the file lib/libnetcdf.a.  As an example
        in the ksh shell, if you issued the command :

	export NETCDF_DIR=/usr/local/netcdf-3.6.2

	then make_fire_emis would look for the file libnetcdf.a in the
	directory /usr/local/netcdf-3.6.2/lib (make_fire_emis automatically
	appends the /lib string to the NETCDF_DIR string.


	Namelist control variables
        ======== ======= =========

	Variable name             Variable type                                   default value
	-------- ----             -------- ----                                   ------- -----

        fire_directory            character(len=132),scalar                       (None)
        fire_filename             character(len=132),array(5)                     (None)
        wrf_directory             character(len=132),scalar                       (None)
        wrf2fire_map              character(len=164),array(500)                   (None)
        start_date                character(len=10),scalar                        (None)
        end_date                  character(len=10),scalar                        (None)

        domains                   integer,scalar                                   1
        max_fire_size             real,scalar                                      2 (square kilometers)
        diag_level                integer,scalar                                   100

	The first six variables must be set in the input namelist file or fire_emis will error halt.

	None of the remaining namelist variables need be set.

        Namelist variable notes
	======== ======== =====

	wrf_directory
	-------------

	  Specifies the directory where fire_emis expects to find the WRF input
	  files wrfinput_d<nn>.  Note that wrf_directory must end with a "/" as in :

	  /myhome/WRF_data/

	fire_directory
	--------------

	  Specifies the directory where fire_emis expects to find the "base"
	  fire emission dataset and the vegetation cover datasets.  Note that
          fire_directory must end with a "/" as in :

	  /myhome/FIRE_data/

	fire_filename
	-------------

	  Specifies a list of up to five filenames of the "base" fire emission datasets.

          The "base" fire emissions were calculated by Christine Wiedinmyer (christin@ucar.edu)
          with the Fire INventory from NCAR (FINN). These can be downloaded from:
		http://bai.acd.ucar.edu/Data/fire/ 

          The "base" fire emission datasets are available for 2 chemical mechanisms, 
          MOZART-4 ("MOZ4") and SAPR99.

	  The ACD FINN repository contains files for the years 2005 through
	  2010 for each group.  Each file is in compressed format and contains fire
	  emission data for an entire year.  When the files are uncompressed they
          produce one or more files with the filename of the following form :

	  GLOB_<date>_<creaton_date>_<chemistry>.txt

	  where :

	  date           =  string signifying time span of file
	  chemistry      =  either "MOZ4" or "SAPRC99"
	  creation_date  =  date on which the file was created( mmddyyyy )

          Thus a "MOZART" emission file for year 2010 that was
	  created on April 29, 2011 will uncompress into the files

	  GLOB_JAN-JUN2010_04292011_MOZ4.txt
	  GLOB_JUL-DEC2010_04292011_MOZ4.txt

          and a counterpart for "SAPRC99" uncompress to

	  GLOB_JAN-JUN2010_05022011_SAPRC99.txt
	  GLOB_JUL-DEC2010_05022011_SAPRC99.txt

          Please NOTE that the compressed files yield differing
          numbers of uncompressed files depending on the year
	  of the emissions.  Furthermore, the <date> portion of
	  the uncompressed names varies depending on the year
	  of the emissions and the number of uncompressed files.
	  Thus you should look carefully at the uncompressed filenames
	  before setting this namelist variable.

          You may wish to specify more than one fire_filename input.
	  Consider the case where you want fire emissions for a MOZ4
	  case for the last week of June, 2010 and the first week
	  of July, 2010.  You specify this with the following
	  fire_filename, start_date, and end_date settings :

	  fire_filename(1) = 'GLOB_JAN-JUN2010_04292011.txt'
	  fire_filename(2) = 'GLOB_JUL-DEC2010_04292011.txt'
          start_date       = '2010-06-24'
          end_date         = '2010-07-07'

          If you specify multiple fire filenames the times in the input
          files must be consecutive with no gaps.

          NOTE: each compressed "base" fire emission file expands into one
	        or more files whose total size is ~5 GB.

	wrf2fire_map
	------------

	  Specifies the mapping between WRF variables and fire emission variables.
	  wrf2fire_map is a character array of size 500.  If you enter more than 500
	  variables there is no error halt but only the first 500 will be
	  mapped.  Each entry in the is of the form :

	  <WRF_variable> -> multiplier * <fire_emission_variable> + multiplier * <fire_emission_variable>[;aerosol]

	  Where

	  <WRF_variable> is the exact name of the WRF variable as it appears in the registry.

	  multiplier is any legal, positive fortran real or integer number.  multiplier defaults
          to 1. and may vary from fire emission variable to fire emission variable.

	  The optional string ";aerosol" at the end of the variable specification indicates
	  that the <WRF_variable> is an aerosol.  The aerosol designation affects the output
          fire emission units.  The absense of the ";aerosol" string signifies that the
          <WRF_variable> is a gas phase species.

	  <fire_emission_variable> is the exact name of a variable in the fire emission dataset.
          You may have any number of fire emission variables per each WRF variable.

	  Individual entries in the wrf2fire_map namelist variable are separated by commas and
          each entry must fit on a single line in the input file.  Each src_map entry is limited
          to 164 characters.

	  The following are two examples of src_map specification; as such they are each only
	  for one WRF variable.

	  wrf2fire_map = 'co -> CO'

	  maps the fire emission variable CO to the WRF variable co.
  
          wrf2fire_map = 'co -> CO', 'hc3 -> alk2 +  1.11 * alk3 + 0.4 * meoh'

	  maps as in the prior example and adds a weighted combination of fire emission variables
          alk2, alk2 and meoh to the WRF variable hc3.
          
	start_date
	----------

	  Specifies the start date for the wrffirechemi_d<nn>_<date>_00:00:00 files.
	  <date> is a WRF date format yyyy-mm-dd wherein

	  yyyy = four digit year
          mm   = two  digit month of year
          dd   = two  digit day of month

	  thus a start_date of 2008-06-11 is for June 11, 2008.

	end_date
	--------

	  Specifies the end date for the wrffirechemi_d<nn>_<date>_00:00:00 files.
	  <date> is a WRF date format yyyy-mm-dd wherein

	  yyyy = four digit year
          mm   = two  digit month of year
          dd   = two  digit day of month

	  thus a start_date of 2008-06-17 is for June 17, 2008.

	domains
	-------

	  Specifies the total number of WRF domains.  Defaults to 1.  Remember, if you set :

	  domains = 2

	  then fire_emis will expect to find files :

	  wrfinput_d01, wrfinput_d02 in the directory indicated by the wrf_directory variable.

	max_fire_size
	-------------

	  Specifies the maximum allowable fire size in square kilometers.  This variable defaults
	  to 2.

	diag_level
	----------

	  Specifies the level of diagnostics output when running fire_emis.  The default
	  value of 100 results in the minimum diagnostic output.  The diag level is set
	  in multiples of 100.  Setting diag_level to 400 produces maximal diagnostics
	  and is appropriate when a prior fire_emis invocation has failed.

	Following is an example of a namelist input file (e.g. fire_emis.inp) for MOZART chemistry:
	
&control
	domains          = 2,
        fire_directory   = '/home/user/fire/',
	fire_filename(1)  = 'FINNv1_2008_MOZ4_20110501',
	wrf_directory    = '/home/user/wrf/',
	start_date       = '2008-06-26',
	end_date         = '2008-07-15',

        wrf2fire_map = 'co -> CO', 'no -> NO', 'so2 -> SO2', 'bigalk -> BIGALK',
            'bigene -> BIGENE', 'c2h4 -> C2H4', 'c2h5oh -> C2H5OH',
            'c2h6 -> C2H6', 'c3h8 -> C3H8','c3h6 -> C3H6','ch2o -> CH2O', 'ch3cho -> CH3CHO',
            'ch3coch3 -> CH3COCH3','ch3oh -> CH3OH','mek -> MEK','toluene -> TOLUENE',
            'nh3 -> NH3','no2 -> NO2','open -> BIGALD','c10h16 -> C10H16',
            'ch3cooh -> CH3COOH','cres -> CRESOL','glyald -> GLYALD','mgly -> CH3COCHO',
            'gly -> CH3COCHO','acetol -> HYAC','isop -> ISOP','macr -> MACR', 'mvk -> MVK',
            'oc -> OC;aerosol','pm10 -> PM10;aerosol','pm25 -> PM25;aerosol',
            'bc -> BC;aerosol'
/


	Running fire_emis
        ======= =========

	To run fire_emis issue the command:

	fire_emis < fire_emis.inp > fire_emis.out

        (Redirected input is required. Redirected output to fire_emis.out is optional.
         The fire_emis.inp and fire_emis.out filenames are for illustration only; you
         may use any valid filename in place of fire_emis.inp, fire_emis.out)

	Implementation notes
        ============== =====

	fire_emis outputs hourly WRF emission files by applying a diurnal factor
	to the daily emissions.  Presently the "WRAP" diurnal factor is applied.

	NOTE! WRF fire emissions datasets are created in a format for
	input into WRF-Chem simulations employing the plume rise option. When using
        the provided "base" fire emissions the created wrffirechemi_d<nn>_<date>_<time>
        files will include both smoldering and flaming emissions. 

        Once you have downloaded and compiled the fire_emis utility you can
	perform a short test.  Assuming that you have placed the fire emission
	files in the top level directory fire_emis you should :

	(1)   Go to the ACD FINNv1 website and down load the file

	      GLOB_MAY_SEPT2008_05062011_MOZ4.tgz

	      to the fire_emis/data_files directory.

	(2)   Unzip and untar the GLOB*tgz file via :

              tar -zxf GLOB_MAY_SEPT2008_05062011_MOZ4.txt

              This should yield three files

	      GLOB_JAN_APR2008_05062011_MOZ4.txt
	      GLOB_MAY_SEPT2008_05062011_MOZ4.txt
	      GLOB_OCT_DEC2008_05062011_MOZ4.txt

	(3)   put a wrfinput_d01 file in fire_emis/data_files

	(4)   get into the fire_emis/test directory

	(5)   issue the command :

              ../src/fire_emis < fire_emis.mozc.inp

	fire_emis should take about 3 to 5 minutes to run.  The output should
	be 24 files of the form :

	wrffirechemi_d01_2008-06-14_<hh>_00:00   where <hh> = {00, 01, 02, ... , 23}

        Each file contains hourly fire emissions for June 14, 2008.
